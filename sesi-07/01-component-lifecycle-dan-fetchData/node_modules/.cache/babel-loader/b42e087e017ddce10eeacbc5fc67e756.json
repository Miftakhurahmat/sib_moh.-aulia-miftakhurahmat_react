{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. MSIB\\\\kelas react\\\\sesi-07\\\\01-component-lifecycle\\\\src\\\\components\\\\01-classComponent\\\\02-updating\\\\Halu.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Halu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      users: [],\n      isLoading: true\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //membatasi, keadaan / kejadian apa saja yang bisa men-trigger re-render, defaultnya true\n    if (this.state.users.length !== nextState.users.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedState !== this.props.selectedState) {\n      fetch('https://jsonplaceholder.typicode.com/posts/1').then(resp => resp.json()).then(respJson => {\n        // do what ever you want with your 'response'\n        this.setState({\n          isLoading: false,\n          users: respJson.slice(0, 20)\n        });\n        console.log(\"test\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos').then(resp => resp.json()).then(respJson => {\n      // do what ever you want with your 'response'\n      this.setState({\n        isLoading: false,\n        users: respJson.slice(0, 20)\n      });\n      console.log(\"test\");\n    }).catch(err => {\n      console.log(err);\n    });\n  } // eventData remove event listener (untuk menghapus)\n\n\n  componentWillUnmount() {// eventData.removeEventListener()\n  }\n\n  render() {\n    const {\n      postTodo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.map((todo, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: todo.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: todo.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 9\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Halu","Component","constructor","props","state","count","users","isLoading","shouldComponentUpdate","nextProps","nextState","length","componentDidUpdate","prevProps","selectedState","fetch","then","resp","json","respJson","setState","slice","console","log","catch","err","componentDidMount","componentWillUnmount","render","postTodo","map","todo","index","id","title"],"sources":["D:/1. MSIB/kelas react/sesi-07/01-component-lifecycle/src/components/01-classComponent/02-updating/Halu.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default class Halu extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcount: 0,\r\n\t\t\tusers: [],\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState){ //membatasi, keadaan / kejadian apa saja yang bisa men-trigger re-render, defaultnya true\r\n\t\tif (this.state.users.length !== nextState.users.length){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.selectedState !== this.props.selectedState) {\r\n\t\t\tfetch('https://jsonplaceholder.typicode.com/posts/1')\r\n\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t.then((respJson) => {\r\n\t\t\t\t\t// do what ever you want with your 'response'\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\t\tusers: respJson.slice(0, 20)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"test\")\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/todos')\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then((respJson) => {\r\n\t\t\t\t// do what ever you want with your 'response'\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tusers: respJson.slice(0, 20)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(\"test\")\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}\r\n\r\n\t// eventData remove event listener (untuk menghapus)\r\n\tcomponentWillUnmount(){\r\n\t\t// eventData.removeEventListener()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { postTodo } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{this.state.map((todo, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<p>{todo.id}</p>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<p>{todo.title}</p>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;EACjDC,WAAW,CAACC,KAAD,EAAO;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACZC,KAAK,EAAE,CADK;MAEZC,KAAK,EAAE,EAFK;MAGZC,SAAS,EAAE;IAHC,CAAb;EAKA;;EAEDC,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;IAAE;IAC5C,IAAI,KAAKN,KAAL,CAAWE,KAAX,CAAiBK,MAAjB,KAA4BD,SAAS,CAACJ,KAAV,CAAgBK,MAAhD,EAAuD;MACtD,OAAO,IAAP;IACA;;IACD,OAAO,KAAP;EACA;;EAEDC,kBAAkB,CAACC,SAAD,EAAY;IAC7B,IAAIA,SAAS,CAACC,aAAV,KAA4B,KAAKX,KAAL,CAAWW,aAA3C,EAA0D;MACzDC,KAAK,CAAC,8CAAD,CAAL,CACEC,IADF,CACOC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADf,EAEEF,IAFF,CAEQG,QAAD,IAAc;QACnB;QACA,KAAKC,QAAL,CAAc;UACbb,SAAS,EAAE,KADE;UAEbD,KAAK,EAAEa,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,EAAlB;QAFM,CAAd;QAIAC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACA,CATF,EAWEC,KAXF,CAWQC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAR,CAAYE,GAAZ;MACA,CAbF;IAcA;EACD;;EAEDC,iBAAiB,GAAE;IAClBX,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACOC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADf,EAEEF,IAFF,CAEQG,QAAD,IAAc;MACnB;MACA,KAAKC,QAAL,CAAc;QACbb,SAAS,EAAE,KADE;QAEbD,KAAK,EAAEa,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,EAAlB;MAFM,CAAd;MAIAC,OAAO,CAACC,GAAR,CAAY,MAAZ;IACA,CATF,EAWEC,KAXF,CAWQC,GAAG,IAAI;MACbH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACA,CAbF;EAcA,CAnDgD,CAqDjD;;;EACAE,oBAAoB,GAAE,CACrB;EACA;;EAGDC,MAAM,GAAG;IACR,MAAM;MAAEC;IAAF,IAAe,KAAKzB,KAA1B;IACA,oBACC;MAAA,uBACC;QAAA,uBACC;UAAA,UACC,KAAKA,KAAL,CAAW0B,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;YAChC,oBACC;cAAA,wBACC;gBAAA,uBACC;kBAAA,UAAID,IAAI,CAACE;gBAAT;kBAAA;kBAAA;kBAAA;gBAAA;cADD;gBAAA;gBAAA;gBAAA;cAAA,QADD,eAIC;gBAAA,uBACC;kBAAA,UAAIF,IAAI,CAACG;gBAAT;kBAAA;kBAAA;kBAAA;gBAAA;cADD;gBAAA;gBAAA;gBAAA;cAAA,QAJD;YAAA,GAASF,KAAT;cAAA;cAAA;cAAA;YAAA,QADD;UAUA,CAXA;QADD;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QADD;EAqBA;;AAlFgD"},"metadata":{},"sourceType":"module"}